function isCostumeToolGet(t){return Array.isArray(t.outputs)&&t.outputs.length>0}function isCostumeToolSet(t){return Array.isArray(t.inputs)&&t.inputs.length>0}window.inspectorToolPanels["tool:costume"]=function(t,e){e.innerHTML=`\n        <div>\n            <p>Target:</p>\n            <select id="costume-sprite-select" style="margin-bottom: 12px;" disabled>\n                <option>Waiting for VM to load...</option>\n            </select>\n            <div style="margin-bottom: 8px; color: #aaa; font-size: 0.98em;">\n                <span id="costume-name-label"></span>\n            </div>\n            <div style="margin-top: 12px;">\n                <span class="variable-badge ${isCostumeToolSet(t)?"on":"off"}">\n                    ${isCostumeToolSet(t)?"Set":"Set (not connected)"}\n                </span>\n                <span class="variable-badge ${isCostumeToolGet(t)?"on":"off"}" style="margin-left:16px;">\n                    ${isCostumeToolGet(t)?"Get":"Get (not connected)"}\n                </span>\n            </div>\n        </div>\n    `,window.waitForVMAndUpdate(window.getScratchTargetNames,function(n){const o=e.querySelector("#costume-sprite-select"),a=e.querySelector("#costume-name-label");o&&(o.innerHTML=0===n.length?"<option>(no targets found)</option>":n.map(e=>`<option value="${e}" ${t.data?.spriteName===e?"selected":""}>${e}</option>`).join(""),o.disabled=!1,"function"==typeof window.getScratchCurrentCostumeName&&window.getScratchCurrentCostumeName(t.data?.spriteName,function(t){a&&(a.innerHTML=t?`Current: <b>${t}</b>`:"")}),o.addEventListener("change",function(e){t.data.spriteName=e.target.value,"function"==typeof window.getScratchCurrentCostumeName&&window.getScratchCurrentCostumeName(e.target.value,function(t){a&&(a.innerHTML=t?`Current: <b>${t}</b>`:"")});const n={metadata:{lastScratchProjectId:window.lastScratchProjectId||null},nodes:window.nodeData};localStorage.setItem("nodes",JSON.stringify(n))}))})};