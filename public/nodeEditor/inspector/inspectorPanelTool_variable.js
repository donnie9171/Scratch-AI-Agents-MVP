function isVariableToolGet(a){return Array.isArray(a.outputs)&&a.outputs.length>0}function isVariableToolSet(a){return Array.isArray(a.inputs)&&a.inputs.length>0}window.inspectorToolPanels["tool:variable"]=function(a,e){const n=window.getScratchVariableValue(a.data?.variableName);e.innerHTML=`\n        <div>\n            <p>Target variable:</p>\n            <select id="variable-name-select" style="margin-bottom: 12px;" disabled>\n                <option>Waiting for VM to load...</option>\n            </select>\n            <div>\n                <span class="variable-badge ${isVariableToolSet(a)?"on":"off"}">\n                    ${isVariableToolSet(a)?"Set":"Set (not connected)"}\n                </span>\n                <span class="variable-badge ${isVariableToolGet(a)?"on":"off"}" style="margin-left:16px;">\n                    ${isVariableToolGet(a)?"Get":"Get (not connected)"}\n                </span>\n            </div>\n            <div margin-top: 12px;">\n                <p>Variable contents:</p>\n                <input type="text" \n                   value="${""!==n?String(n).replace(/"/g,"&quot;"):"(empty)"}"\n                   readonly \n                   style="width: 90%; color: #aaa; background: #18192a; border: 1px solid #444; border-radius: 6px; padding: 4px;">\n            </div>\n        </div>\n    `,window.waitForVMAndUpdate(window.getScratchVariableNames,function(n){const t=e.querySelector("#variable-name-select");t&&(t.innerHTML=0===n.length?"<option>(no variables found)</option>":n.map(e=>`<option value="${e}" ${a.data?.variableName===e?"selected":""}>${e}</option>`).join(""),t.disabled=!1,t.addEventListener("change",function(e){a.data.variableName=e.target.value;const n={metadata:{lastScratchProjectId:window.lastScratchProjectId||null},nodes:window.nodeData};localStorage.setItem("nodes",JSON.stringify(n))}))})},window.showInspector=showInspector;